/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* head=NULL;
        ListNode* curr=head;
        int c=0;
        while(l1 && l2)
        {
            int x=l1->val+l2->val+c;
            c=x/10;
            ListNode* temp=new ListNode(x%10);
            l1=l1->next;
            l2=l2->next;
            if(head==NULL)
            {
                head=temp;
                curr=temp;
            }
            else
            {
                curr->next=temp;
                curr=temp;
            }
        }
        ListNode* tp=(l1!=NULL)? l1:l2;
        while(tp)
        {
            
            
             int x=tp->val+c;
            c=x/10;
            ListNode* temp=new ListNode(x%10);
            tp=tp->next;
            if(head==NULL)
            {
                head=temp;
                curr=temp;
            }
            else
            {
                curr->next=temp;
                curr=temp;
            }
        }
        if(c)
        {
              ListNode* temp=new ListNode(c);
            
            if(head==NULL)
            {
                head=temp;
                curr=temp;
            }
            else
            {
                curr->next=temp;
                curr=temp;
            }
        }
        return head;
    }
};
